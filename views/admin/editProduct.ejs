<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <title>Edit Product | Admin Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta content="Responsive bootstrap 4 admin template" name="description" />
  <meta content="Coderthemes" name="author" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <link rel="shortcut icon" href="/assets/images/favicon.ico">
  <link href="/assets/css/bootstrap.min.css" rel="stylesheet" type="text/css" id="bootstrap-stylesheet" />
  <link href="/assets/css/icons.min.css" rel="stylesheet" type="text/css" />
  <link href="/assets/css/app.min.css" rel="stylesheet" type="text/css" id="app-stylesheet" />
</head>

<body>
  <div id="wrapper">
    <%- include('header') %>
      <%- include('sidebar') %>
        <div class="content-page">
          <div class="content">
            <div class="container-fluid">
              <div class="breadcrumb mb-0 d-none d-md-block flex-grow-1" style="background-color: transparent;">
                <a href="/admin" class="menu-link menu-link_us-s text-uppercase fw-medium">Home</a>
                <span class="breadcrumb-separator menu-link fw-medium ps-1 pe-1">/</span>
                <a href="/admin/products" class="menu-link menu-link_us-s text-uppercase fw-medium">Products</a>
                <span class="breadcrumb-separator menu-link fw-medium ps-1 pe-1">/</span>
                <a class="menu-link menu-link_us-s text-uppercase fw-medium">Edit products</a>
              </div>
              <div class="row">
                <div class="col-12">
                  <div class="d-flex justify-content-between align-items-center">
                    <span class="mb-3" style="font-size: 1.25rem; font-weight: bold;">Edit Product</span>
                  </div>
                </div>
              </div>
              <div class="row justify-content-center align-items-center">
                <div class="col-12 col-lg-8">
                  <div class="card mb-4">
                    <div class="card-header">
                      <h5 class="card-title mb-0">Product information</h5>
                      <% if (addProductMsg && addProductMsg.length> 0) { %>
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                          <strong>
                            <%= addProductMsg[0] %>
                          </strong>
                          <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                          </button>
                        </div>
                        <% } %>
                    </div>
                    <div class="card-body">
                      <form action="/admin/products/editProduct?_method=PUT" enctype="multipart/form-data" method="POST"
                        id="product-form">
                        <div class="mb-3">
                          <label class="form-label" for="name">Name</label>
                          <input type="text" class="form-control" id="name" placeholder="Product title" name="Name"
                            aria-label="Product title" value="<%= productObj.Name %>" required>
                        </div>
                        <div class="row mb-3">
                          <div class="col">
                            <label class="form-label" for="brand">Brand</label>
                            <div class="input-group">
                              <input type="text" class="form-control" id="selectedBrand"
                                value="<%= productObj.Brand.Name %>" name="Brand" readonly required>
                              <input type="hidden" class="form-control" id="selectedBrandId"
                                value="<%= productObj.Brand._id %>" name="BrandId" readonly required>
                              <div class="input-group-append">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton"
                                  data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                  Select Brand
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                  <% if (brandsData) { %>
                                    <% Object.keys(brandsData).forEach((key)=> { %>
                                      <button class="dropdown-item" type="button"
                                        onclick="selectBrand('<%= brandsData[key]._id %>', '<%= brandsData[key].Name %>')">
                                        <%= brandsData[key].Name %>
                                      </button>
                                      <% }) %>
                                        <% } %>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div class="col">
                            <label class="form-label" for="category">Category</label>
                            <div class="input-group">
                              <input type="text" class="form-control" id="selectedCategory"
                                value="<%= productObj.Category.Name %>" name="Category" readonly required>
                              <input type="hidden" class="form-control" id="selectedCategoryId"
                                value="<%= productObj.Category._id %>" name="CategoryId" readonly required>
                              <div class="input-group-append">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton"
                                  data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                  Select Category
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                  <% if (categoriesData) { %>
                                    <% Object.keys(categoriesData).forEach((key)=> { %>
                                      <button class="dropdown-item" type="button"
                                        onclick="selectCategory('<%= categoriesData[key]._id %>', '<%= categoriesData[key].Name %>')">
                                        <%= categoriesData[key].Name %>
                                      </button>
                                      <% }) %>
                                        <% } %>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="mb-3">
                          <label class="form-label">Description</label>
                          <textarea class="form-control h-200" rows="1" name="Description"
                            placeholder="<%= productObj.Description %>"
                            required><%= productObj.Description %></textarea>
                        </div>

                        <div class="card mb-4 mt-4 p-3">
                          <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0 card-title">Versions</h5>
                            <button type="button" class="btn btn-secondary" onclick="addVersion()">Add Version</button>
                          </div>
                          <div id="versions-container">
                            <input type="hidden" id="deletedVersions" name="deletedVersions" value="">
                            <% for(let key=0; key < productObj.Versions.length; key++) { %>
                              <div class="card-body version-item mb-3 p-3 border rounded"
                                id="version<%= productObj.Versions[key]._id %>">
                                <input type="hidden" name="existingVersions[<%= key %>]._id"
                                  value="<%= productObj.Versions[key]._id %>">
                                <div class="row mb-2">
                                  <div class="col d-flex justify-content-between align-items-center">
                                    <span class="font-weight-bold">Existing version</span>
                                    <button type="button" class="btn btn-danger btn-sm"
                                      onclick="removeVersion('<%= productObj.Versions[key]._id %>')">Delete</button>
                                  </div>
                                </div>
                                <div class="row">
                                  <div class="col">
                                    <label class="form-label" for="color">Color</label>
                                    <div class="input-group">
                                      <input type="text" class="form-control" id="selectedColor<%= key %>"
                                        name="existingVersions[<%= key %>].ColorName"
                                        value="<%= productObj.Versions[key].Color.Name %>" readonly required>
                                      <input type="hidden" class="form-control" id="selectedColorId<%= key %>"
                                        name="existingVersions[<%= key %>].Color"
                                        value="<%= productObj.Versions[key].Color._id %>" readonly required>
                                    </div>
                                  </div>
                                  <div class="col">
                                    <label class="form-label" for="size">Size (UK)</label>
                                    <div class="input-group">
                                      <input type="text" class="form-control" id="selectedSize<%= key %>"
                                        name="existingVersions[<%= key %>].SizeName"
                                        value="<%= productObj.Versions[key].Size.Name %>" readonly required>
                                      <input type="hidden" class="form-control" id="selectedSizeId<%= key %>"
                                        name="existingVersions[<%= key %>].Size"
                                        value="<%= productObj.Versions[key].Size._id %>" readonly required>
                                    </div>
                                  </div>
                                </div>
                                <div class="row">
                                  <div class="col">
                                    <label class="form-label" for="quantity">Quantity</label>
                                    <div class="input-group">
                                      <div class="input-group-prepend">
                                        <button class="btn btn-outline-secondary" type="button"
                                          onclick="changeQuantity('minus', <%= key %>)">-</button>
                                      </div>
                                      <input type="number" class="form-control"
                                        value="<%= productObj.Versions[key].Quantity %>" id="quantity<%= key %>"
                                        name="existingVersions[<%= key %>].Quantity" aria-label="Quantity" required>
                                      <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button"
                                          onclick="changeQuantity('plus', <%= key %>)">+</button>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="col">
                                    <label class="form-label" for="Price">Price</label>
                                    <div class="input-group">
                                      <div class="input-group-prepend">
                                        <button class="btn btn-outline-secondary" type="button"
                                          onclick="changePrice('minus', <%= key %>)">-</button>
                                      </div>
                                      <input type="number" class="form-control"
                                        value="<%= productObj.Versions[key].Price %>" id="price<%= key %>"
                                        name="existingVersions[<%= key %>].Price" aria-label="Price" required>
                                      <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button"
                                          onclick="changePrice('plus', <%= key %>)">+</button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <% } %>
                          </div>

                          <div class="row mb-3">
                            <div class="col">
                              <label class="form-label" for="color">Images</label>
                              <div class="mb-3">
                                <button type="button" class="btn btn-primary" id="add-image-button">Add Image</button>
                                <input type="file" id="image-upload" name="Image" accept="image/png" multiple
                                  style="display: none;">
                              </div>
                              <div id="selected-images-preview" class="d-flex flex-wrap">
                                <div id="existing-images-preview">
                                  <% for (var i=0; i < productObj.Image.length; i++) { %>
                                    <div
                                      class="rounded bg-light p-2 m-1 d-flex align-items-center existing-image-container">
                                      <img class="img-fluid" src="/<%= productObj.Image[i] %>" alt="Image"
                                        style="width: 100px; height: 100px;">
                                      <button type="button"
                                        class="btn btn-danger btn-sm ml-2 delete-existing-image-button">Remove</button>
                                      <input type="hidden" name="existingImages[]" value="<%= productObj.Image[i] %>">
                                    </div>
                                    <% } %>
                                </div>
                                <div id="new-images-preview"></div>
                              </div>
                            </div>
                          </div>
                          <div class="text-center mt-3">
                            <input type="hidden" name="productId" value="<%= productObj._id %>">
                            <button type="submit" class="btn btn-primary">Update Product</button>
                          </div>
                      </form>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
  </div>

  <script src="/assets/js/vendor.min.js"></script>
  <script src="/assets/js/app.min.js"></script>

  <script>

    function selectColor(colorId, colorName, index) {
      document.getElementById(`selectedColor${index}`).value = colorName;
      document.getElementById(`selectedColorId${index}`).value = colorId;
    }

    function selectSize(sizeId, sizeName, index) {
      document.getElementById(`selectedSize${index}`).value = sizeName;
      document.getElementById(`selectedSizeId${index}`).value = sizeId;
    }

    function selectCategory(categoryId, categoryName) {
      document.getElementById("selectedCategory").value = categoryName;
      document.getElementById("selectedCategoryId").value = categoryId;
    }

    function selectBrand(brandId, brandName) {
      document.getElementById("selectedBrand").value = brandName;
      document.getElementById("selectedBrandId").value = brandId;
    }

    function changeQuantity(action, index) {
      const quantityInput = document.getElementById(`quantity${index}`);
      let currentValue = parseInt(quantityInput.value);
      if (action === 'minus' && currentValue > 1) {
        quantityInput.value = currentValue - 1;
      } else if (action === 'plus') {
        quantityInput.value = currentValue + 1;
      }
    }

    function changePrice(action, index) {
      const priceInput = document.getElementById(`price${index}`);
      let currentValue = parseFloat(priceInput.value);
      if (action === 'minus' && currentValue > 0) {
        priceInput.value = (currentValue - 1).toFixed(2);
      } else if (action === 'plus') {
        priceInput.value = (currentValue + 1).toFixed(2);
      }
    }

    let versionCount = <%= productObj.Versions.length %>;

    function addVersion() {
      const versionContainer = document.getElementById('versions-container');

      const newVersionHTML = `
    <div class="card-body version-item mb-3 p-3 border rounded" id="newVersion${versionCount}">
      <div class="row mb-2">
        <div class="col d-flex justify-content-between align-items-center">
          <span class="font-weight-bold">New version</span>
          <button type="button" class="btn btn-danger btn-sm" onclick="removeNewVersion('newVersion${versionCount}')">Delete</button>
        </div>
      </div>
      <div class="row">
        <div class="col">
          <label class="form-label" for="color">Color</label>
          <div class="input-group">
            <input type="text" class="form-control" id="selectedColor${versionCount}" name="newVersions[${versionCount}].ColorName" value="" readonly required>
            <input type="hidden" class="form-control" id="selectedColorId${versionCount}" name="newVersions[${versionCount}].Color" value="" readonly required>
            <div class="input-group-append">
              <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Select Color
              </button>
              <div class="dropdown-menu columns-3" aria-labelledby="dropdownMenuButton">
                <div class="row">
                  <% colorsData.forEach((color)=> { %>
                    <div class="col-sm-4">
                      <button class="dropdown-item" type="button" onclick="selectColor('<%= color._id %>', '<%= color.Name %>', ${versionCount})">
                        <%= color.Name %>
                      </button>
                    </div>
                  <% }) %>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="col">
          <label class="form-label" for="size">Size (UK)</label>
          <div class="input-group">
            <input type="text" class="form-control" id="selectedSize${versionCount}" name="newVersions[${versionCount}].SizeName" value="" readonly required>
            <input type="hidden" class="form-control" id="selectedSizeId${versionCount}" name="newVersions[${versionCount}].Size" value="" readonly required>
            <div class="input-group-append">
              <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Select Size
              </button>
              <div class="dropdown-menu columns-3" aria-labelledby="dropdownMenuButton">
                <div class="row">
                  <% sizesData.forEach((size)=> { %>
                    <div class="col-sm-4">
                      <button class="dropdown-item" type="button" onclick="selectSize('<%= size._id %>', '<%= size.Name %>', ${versionCount})">
                        <%= size.Name %>
                      </button>
                    </div>
                  <% }) %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col">
          <label class="form-label" for="quantity">Quantity</label>
          <div class="input-group">
            <div class="input-group-prepend">
              <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('minus', ${versionCount})">-</button>
            </div>
            <input type="number" class="form-control" value="0" id="quantity${versionCount}" name="newVersions[${versionCount}].Quantity" aria-label="Quantity" required>
            <div class="input-group-append">
              <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('plus', ${versionCount})">+</button>
            </div>
          </div>
        </div>
        <div class="col">
          <label class="form-label" for="Price">Price</label>
          <div class="input-group">
            <div class="input-group-prepend">
              <button class="btn btn-outline-secondary" type="button" onclick="changePrice('minus', ${versionCount})">-</button>
            </div>
            <input type="number" class="form-control" value="0" id="price${versionCount}" name="newVersions[${versionCount}].Price" aria-label="Price" required>
            <div class="input-group-append">
              <button class="btn btn-outline-secondary" type="button" onclick="changePrice('plus', ${versionCount})">+</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;

      versionContainer.insertAdjacentHTML('beforeend', newVersionHTML);
      versionCount++;
    }

    function removeVersion(versionId) {
      // Add the versionId to a hidden input for deletions
      const deletionsInput = document.getElementById('deletedVersions');
      deletionsInput.value += (deletionsInput.value ? ',' : '') + versionId;
      console.log(deletionsInput.value);

      // Remove the version from the DOM
      const versionElement = document.getElementById(`version${versionId}`);
      if (versionElement) {
        versionElement.remove();
      }
    }
    function removeNewVersion(versionId) {

      // Remove the version from the DOM
      const versionElement = document.getElementById(versionId);
      if (versionElement) {
        versionElement.remove();
      }
    }

    document.addEventListener('DOMContentLoaded', function () {
      const addImageButton = document.getElementById("add-image-button");
      const imageUploadInput = document.getElementById("image-upload");
      const existingImagesPreview = document.getElementById("existing-images-preview");
      const newImagesPreview = document.getElementById("new-images-preview");

      addImageButton.addEventListener("click", () => {
        imageUploadInput.click();
      });

      function removeExistingImage(imagePath) {
        const container = document.querySelector(`.existing-image-container img[src='/${imagePath}']`).parentElement;
        container.remove();
        const removedImagesInput = document.createElement("input");
        removedImagesInput.type = "hidden";
        removedImagesInput.name = "removedImages[]";
        removedImagesInput.value = imagePath;
        document.getElementById("product-form").appendChild(removedImagesInput);
      }

      function removeNewImage(index) {
        document.getElementById(`new-image-${index}`).remove();
        const fileListArray = Array.from(imageUploadInput.files);
        fileListArray.splice(index, 1);
        imageUploadInput.files = new FileListItems(fileListArray);
      }

      function handleImageUpload(event) {
        const files = Array.from(event.target.files);
        newImagesPreview.innerHTML = "";
        files.forEach((file, index) => {
          if (file.type === "image/png") {
            const imgContainer = document.createElement("div");
            imgContainer.classList.add("rounded", "bg-light", "p-2", "m-1", "d-flex", "align-items-center");
            imgContainer.id = `new-image-${index}`;

            const img = document.createElement("img");
            img.classList.add("img-fluid");
            img.src = URL.createObjectURL(file);
            img.style.width = "100px";
            img.style.height = "100px";
            imgContainer.appendChild(img);

            const deleteButton = document.createElement("button");
            deleteButton.type = "button";
            deleteButton.classList.add("btn", "btn-danger", "btn-sm", "ml-2");
            deleteButton.textContent = "Remove";
            deleteButton.addEventListener("click", () => removeNewImage(index));
            imgContainer.appendChild(deleteButton);

            newImagesPreview.appendChild(imgContainer);
          }
        });
      }

      imageUploadInput.addEventListener("change", handleImageUpload);

      function FileListItems(files) {
        const b = new ClipboardEvent("").clipboardData || new DataTransfer();
        for (let i = 0, len = files.length; i < len; i++) b.items.add(files[i]);
        return b.files;
      }

      // Attach remove event listeners to existing images
      existingImagesPreview.querySelectorAll('.delete-existing-image-button').forEach(button => {
        button.addEventListener('click', function () {
          const imagePath = this.previousElementSibling.src.split('/').slice(3).join('/');
          removeExistingImage(imagePath);
        });
      });
    });

    // Form submission
    document.getElementById('product-form').addEventListener('submit', async function (event) {
      event.preventDefault();

      const formData = new FormData(this);

      try {
        const response = await fetch('/admin/products/editProduct?_method=PUT', {
          method: 'POST',
          body: formData
        });

        if (response.ok) {
          window.location.href = '/admin/products';
        } else {
          const errorData = await response.json();
          console.log('Error:', errorData.message);
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });
  </script>
</body>

</html>